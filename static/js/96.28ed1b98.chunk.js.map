{"version":3,"file":"static/js/96.28ed1b98.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Loader/Loader.jsx","components/StateMachine/StateMachine.jsx","constants/stateMachineStatus.js","hooks/useStateMachine.js","constants/apiConstants.js","services/themoviedb.org-API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ActorsAvatar = styled.div`\n  max-width: 200px;\n  overflow: hidden;\n  border-radius: 3px;\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  justify-content: center;\n`;\n\nexport const CastItem = styled.li`\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background-color: #f8f8f8;\n  border-radius: 3px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as themoviedbAPI from 'services/themoviedb.org-API';\nimport { ActorsAvatar, CastItem, CastList } from './Cast.styled';\nimport defaultIMG from 'images/default/default-avatar-1.jpg';\nimport { StateMachine } from 'components/StateMachine/StateMachine';\nimport { Status } from 'constants/stateMachineStatus';\nimport { useStateMachine } from 'hooks/useStateMachine';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const { status, setStatus, error, setError } = useStateMachine();\n\n  useEffect(() => {\n    // themoviedbAPI.getMovieCredits(movieId).then(setCast);\n\n    async function fetchCast() {\n      try {\n        setStatus(Status.PENDING);\n        const data = await themoviedbAPI.getMovieCredits(movieId);\n\n        setCast(data);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setError(error);\n        setStatus(Status.REJECTED);\n      }\n    }\n\n    fetchCast();\n  }, [movieId, setError, setStatus]);\n\n  return (\n    <>\n      <StateMachine status={status} error={error} />\n\n      {cast && (\n        <CastList>\n          {cast.cast.map(({ id, name, profile_path, character }) => (\n            <CastItem key={id}>\n              <ActorsAvatar>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                  alt={name}\n                  onError={event => {\n                    event.target.src = defaultIMG;\n                    event.onerror = null;\n                  }}\n                />\n              </ActorsAvatar>\n              <div>\n                <h3>{name}</h3>\n                <p>{character}</p>\n              </div>\n            </CastItem>\n          ))}\n        </CastList>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { BallTriangle } from 'react-loader-spinner';\nimport { Box } from 'styleConfig/Box';\n\nexport const Loader = () => {\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <BallTriangle\n        hcolor={p => p.theme.colors.loader}\n        height={80}\n        width={80}\n        ariaLabel=\"loading\"\n      />\n    </Box>\n  );\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { Box } from 'styleConfig/Box';\n\nexport const StateMachine = ({ status, error }) => {\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && (\n        <Box color=\"red\" textAlign=\"center\">\n          {error.message}\n        </Box>\n      )}\n    </>\n  );\n};\n","export const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n","import { Status } from 'constants/stateMachineStatus';\nimport { useState } from 'react';\n\nexport const useStateMachine = () => {\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState({ message: '' });\n  return { status, setStatus, error, setError };\n};\n","export const BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const KEY = 'c24a579521956747b362db1dbfab545a';\n","import { BASE_URL, KEY } from 'constants/apiConstants';\n\nasync function fetchErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n}\n\nexport function getTrending() {\n  return fetchErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\n\nexport function searchMovies(query = 'cat', page = 1) {\n  return fetchErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&region=US&include_adult=false&query=${query}&page=${page}`\n  );\n}\n\nexport function getMovieDetails(id) {\n  return fetchErrorHandling(\n    `${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function getMovieCredits(id) {\n  return fetchErrorHandling(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function getMovieReviews(id, page = 1) {\n  return fetchErrorHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=${page}`\n  );\n}\n"],"names":["ActorsAvatar","styled","CastList","CastItem","movieId","useParams","useState","cast","setCast","useStateMachine","status","setStatus","error","setError","useEffect","Status","themoviedbAPI","data","fetchCast","StateMachine","map","id","name","profile_path","character","src","alt","onError","event","target","defaultIMG","onerror","Loader","Box","display","justifyContent","hcolor","p","theme","colors","loader","height","width","ariaLabel","color","textAlign","message","IDLE","PENDING","RESOLVED","REJECTED","BASE_URL","KEY","fetchErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","getTrending","searchMovies","query","page","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}