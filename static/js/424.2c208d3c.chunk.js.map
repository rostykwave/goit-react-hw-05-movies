{"version":3,"file":"static/js/424.2c208d3c.chunk.js","mappings":"4PAiDA,UA1CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA+CE,EAAAA,EAAAA,KAAvCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,MAAOC,EAAlC,EAAkCA,SAElC,GAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAoBA,OAnBAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,oGAEIN,EAAUO,EAAAA,EAAAA,SAFd,SAGuBC,EAAAA,GAA8BZ,GAHrD,OAGUa,EAHV,OAKIJ,EAAWI,EAAKA,MAChBT,EAAUO,EAAAA,EAAAA,UANd,gDAQIL,EAAS,EAAD,IACRF,EAAUO,EAAAA,EAAAA,UATd,0DAHc,0DAgBdG,KACC,CAACd,EAASM,EAAUF,KAGrB,iCACE,SAAC,IAAD,CAAcD,OAAQA,EAAQE,MAAOA,IAEpCG,GACCA,EAAQO,QAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAClB,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,MAKZT,GAAsC,IAA3BA,EAAQO,QAAQK,SAC1B,uE,8FCvCKC,EAAS,WACpB,OACE,SAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAAnC,UACE,SAAC,KAAD,CACEC,OAAQ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,QAC5BC,OAAQ,GACRC,MAAO,GACPC,UAAU,eCRLC,EAAe,SAAC,GAAuB,IAArB9B,EAAoB,EAApBA,OAAQE,EAAY,EAAZA,MACrC,OACE,gCACc,YAAXF,IAAwB,SAACkB,EAAD,IACb,aAAXlB,IACC,SAACmB,EAAA,EAAD,CAAKY,MAAM,MAAMC,UAAU,SAA3B,SACG9B,EAAM+B,e,qDCTV,IAAMzB,EAAS,CACpB0B,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,a,sFCDCtC,EAAkB,WAC7B,OAA4BK,EAAAA,EAAAA,UAASI,EAAAA,EAAAA,MAArC,eAAOR,EAAP,KAAeC,EAAf,KACA,GAA0BG,EAAAA,EAAAA,UAAS,CAAE6B,QAAS,KAA9C,eACA,MAAO,CAAEjC,OAAAA,EAAQC,UAAAA,EAAWC,MAD5B,KACmCC,SADnC,Q,sJCLK,IAEMmC,EAAM,mC,mBCUZ,SAASC,IACd,OAAOC,IAAAA,IAAA,uBAAkC,CACvCC,OAAQ,CAAEC,QAASJ,KAKhB,SAASK,IAAyC,IAA5BC,EAA2B,uDAAnB,MAAOC,EAAY,uDAAL,IACjD,OAAOL,IAAAA,IAAA,iBAA4B,CACjCC,OAAQ,CACNC,QAASJ,EACTQ,SAAU,QACVC,OAAQ,KACRC,cAAe,QACfJ,MAAAA,EACAC,KAAAA,KAQC,SAASI,EAAgBnC,GAC9B,OAAO0B,IAAAA,IAAA,iBAAoB1B,EAApB,KAA2B,CAChC2B,OAAQ,CAAEC,QAASJ,EAAKQ,SAAU,WAO/B,SAASI,EAAgBpC,GAC9B,OAAO0B,IAAAA,IAAA,iBAAoB1B,EAApB,aAAmC,CACxC2B,OAAQ,CAAEC,QAASJ,EAAKQ,SAAU,WAO/B,SAASK,EAAgBrC,GAAe,IAAX+B,EAAU,uDAAH,EACzC,OAAOL,IAAAA,IAAA,iBAAoB1B,EAApB,aAAmC,CACxC2B,OAAQ,CAAEC,QAASJ,EAAKQ,SAAU,QAASD,KAAAA,KApD/CL,IAAAA,SAAAA,QDHwB","sources":["components/Reviews/Reviews.jsx","components/Loader/Loader.jsx","components/StateMachine/StateMachine.jsx","constants/stateMachineStatus.js","hooks/useStateMachine.js","constants/apiConstants.js","services/themoviedb.org-API.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as themoviedbAPI from 'services/themoviedb.org-API';\nimport { StateMachine } from 'components/StateMachine/StateMachine';\nimport { Status } from 'constants/stateMachineStatus';\nimport { useStateMachine } from 'hooks/useStateMachine';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const { status, setStatus, error, setError } = useStateMachine();\n\n  const [reviews, setReviews] = useState(null);\n  useEffect(() => {\n    // themoviedbAPI.getMovieReviews(movieId).then(setReviews);\n\n    async function fetchReviews() {\n      try {\n        setStatus(Status.PENDING);\n        const data = await themoviedbAPI.getMovieReviews(movieId);\n\n        setReviews(data.data);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setError(error);\n        setStatus(Status.REJECTED);\n      }\n    }\n\n    fetchReviews();\n  }, [movieId, setError, setStatus]);\n\n  return (\n    <>\n      <StateMachine status={status} error={error} />\n\n      {reviews &&\n        reviews.results.map(({ id, author, content }) => (\n          <li key={id}>\n            <h3>Author: {author}</h3>\n            <p>{content}</p>\n          </li>\n        ))}\n      {reviews && reviews.results.length === 0 && (\n        <p>There isn`t any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { BallTriangle } from 'react-loader-spinner';\nimport { Box } from 'styleConfig/Box';\n\nexport const Loader = () => {\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <BallTriangle\n        hcolor={p => p.theme.colors.loader}\n        height={80}\n        width={80}\n        ariaLabel=\"loading\"\n      />\n    </Box>\n  );\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { Box } from 'styleConfig/Box';\n\nexport const StateMachine = ({ status, error }) => {\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && (\n        <Box color=\"red\" textAlign=\"center\">\n          {error.message}\n        </Box>\n      )}\n    </>\n  );\n};\n","export const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n","import { Status } from 'constants/stateMachineStatus';\nimport { useState } from 'react';\n\nexport const useStateMachine = () => {\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState({ message: '' });\n  return { status, setStatus, error, setError };\n};\n","export const BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const KEY = 'c24a579521956747b362db1dbfab545a';\n","import { BASE_URL, KEY } from 'constants/apiConstants';\nimport axios from 'axios';\n\naxios.defaults.baseURL = BASE_URL;\n\n// async function fetchErrorHandling(url = '', config = {}) {\n//   const response = await fetch(url, config);\n//   return response.ok\n//     ? await response.json()\n//     : Promise.reject(new Error('Not Found'));\n// }\n\nexport function getTrending() {\n  return axios.get(`/trending/movie/day?`, {\n    params: { api_key: KEY },\n  });\n  // return fetchErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\n\nexport function searchMovies(query = 'cat', page = '1') {\n  return axios.get(`/search/movie?`, {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n      region: 'US',\n      include_adult: 'false',\n      query,\n      page,\n    },\n  });\n  // return fetchErrorHandling(\n  //   `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&region=US&include_adult=false&query=${query}&page=${page}`\n  // );\n}\n\nexport function getMovieDetails(id) {\n  return axios.get(`/movie/${id}?`, {\n    params: { api_key: KEY, language: 'en-US' },\n  });\n  // return fetchErrorHandling(\n  //   `${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US`\n  // );\n}\n\nexport function getMovieCredits(id) {\n  return axios.get(`/movie/${id}/credits?`, {\n    params: { api_key: KEY, language: 'en-US' },\n  });\n  // return fetchErrorHandling(\n  //   `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  // );\n}\n\nexport function getMovieReviews(id, page = 1) {\n  return axios.get(`/movie/${id}/reviews?`, {\n    params: { api_key: KEY, language: 'en-US', page },\n  });\n  // return fetchErrorHandling(\n  //   `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=${page}`\n  // );\n}\n"],"names":["movieId","useParams","useStateMachine","status","setStatus","error","setError","useState","reviews","setReviews","useEffect","Status","themoviedbAPI","data","fetchReviews","results","map","id","author","content","length","Loader","Box","display","justifyContent","hcolor","p","theme","colors","loader","height","width","ariaLabel","StateMachine","color","textAlign","message","IDLE","PENDING","RESOLVED","REJECTED","KEY","getTrending","axios","params","api_key","searchMovies","query","page","language","region","include_adult","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}