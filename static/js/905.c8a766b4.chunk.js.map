{"version":3,"file":"static/js/905.c8a766b4.chunk.js","mappings":"yPAEaA,EAASC,EAAAA,GAAAA,IAAH,uF,SCCNC,GAAmBD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,qE,SCyE7B,EAnEqB,WAAO,IAAD,IACjBG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA8BN,GAASO,KAAKH,KAC3C,CAACJ,IAEJ,IAAMQ,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAE7C,OACE,8BACGT,IACC,6BACE,SAACL,EAAD,CAAkBe,GAAIH,EAAtB,6BAEA,UAACI,EAAA,EAAD,CAAKC,QAAQ,OAAb,WACE,SAACnB,EAAD,WACE,gBACEoB,IAAG,yCAAoCb,EAAMc,aAC7CC,IAAKf,EAAMgB,oBAGf,UAACL,EAAA,EAAD,CAAKM,GAAG,OAAR,WACE,0BACGjB,EAAMgB,gBACP,iCAAShB,EAAMkB,aAAaC,MAAM,EAAG,GAArC,WAEF,wCAAgBnB,EAAMoB,iBACtB,sCACA,uBAAIpB,EAAMqB,YAEV,oCACA,uBACGrB,EAAMsB,OAAOC,OACVvB,EAAMsB,OAAOE,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QAAMC,KAAK,KACnC,oCAIV,UAAChB,EAAA,EAAD,CAAKiB,UAAU,YAAYC,aAAa,YAAxC,WACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMnB,GAAG,OAAOF,MAAO,CAAEC,KAAMJ,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMK,GAAG,UAAUF,MAAO,CAAEC,KAAMJ,GAAlC,8BAMN,SAACM,EAAA,EAAD,CAAKmB,UAAU,OAAf,UACE,SAAC,EAAAC,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,e,oLCjERC,EAAW,+BAEXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAkCC,EAAlC,+BAAwC,GAAIC,EAA5C,+BAAqD,GAArD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAmB,GAAD,OAAIF,EAAJ,uCAA2CC,IAG/D,SAASY,IAAuC,IAA1BC,EAAyB,uDAAjB,MAAOC,EAAU,uDAAH,EACjD,OAAOb,EAAmB,GAAD,OACpBF,EADoB,iCACaC,EADb,+DACuEa,EADvE,iBACqFC,IAIzG,SAASC,EAAgBC,GAC9B,OAAOf,EAAmB,GAAD,OACpBF,EADoB,kBACFiB,EADE,oBACYhB,EADZ,oBAKpB,SAASiB,EAAgBD,GAC9B,OAAOf,EAAmB,GAAD,OACpBF,EADoB,kBACFiB,EADE,4BACoBhB,EADpB,oBAKpB,SAASkB,EAAgBF,GAAe,IAAXF,EAAU,uDAAH,EACzC,OAAOb,EAAmB,GAAD,OACpBF,EADoB,kBACFiB,EADE,4BACoBhB,EADpB,gCAC+Cc","sources":["pages/MovieDetails/MovieDetails.styled.jsx","components/goBackLink/goBackLink.jsx","pages/MovieDetails/MovieDetails.jsx","services/themoviedb.org-API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Avatar = styled.div`\n  min-width: 200px;\n  max-width: 300px;\n  margin-top: 20px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledGoBackLink = styled(Link)`\n  color: #1b1b03;\n  text-decoration: none;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport * as themoviedbAPI from 'services/themoviedb.org-API';\nimport { Link, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { Avatar } from './MovieDetails.styled';\nimport { Box } from 'styleConfig/Box';\nimport { StyledGoBackLink } from 'components/goBackLink/goBackLink';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    themoviedbAPI.getMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  return (\n    <>\n      {movie && (\n        <main>\n          <StyledGoBackLink to={backLinkHref}>‚Üê Go back</StyledGoBackLink>\n\n          <Box display=\"flex\">\n            <Avatar>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt={movie.original_title}\n              ></img>\n            </Avatar>\n            <Box ml=\"30px\">\n              <h2>\n                {movie.original_title}\n                <span> ({movie.release_date.slice(0, 4)})</span>\n              </h2>\n              <p>User Score: {movie.vote_average}</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n\n              <h3>Genres</h3>\n              <p>\n                {movie.genres.length\n                  ? movie.genres.map(g => g.name).join(' ')\n                  : 'genres are not described'}\n              </p>\n            </Box>\n          </Box>\n          <Box borderTop=\"1px solid\" borderBottom=\"1px solid\">\n            <h3>Additional information</h3>\n            <ul>\n              <li>\n                <Link to=\"cast\" state={{ from: location }}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link to=\"reviews\" state={{ from: location }}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </Box>\n          <Box minHeight=\"40vh\">\n            <Suspense fallback={<div>Loading subpage...</div>}>\n              <Outlet />\n            </Suspense>\n          </Box>\n        </main>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","// const URL:`https://api.themoviedb.org/3/movie/550?api_key=c24a579521956747b362db1dbfab545a`;\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'c24a579521956747b362db1dbfab545a';\n\nasync function fetchErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n}\n\nexport function getTrending() {\n  return fetchErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\n\nexport function searchMovies(query = 'cat', page = 1) {\n  return fetchErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&region=US&include_adult=false&query=${query}&page=${page}`\n  );\n}\n\nexport function getMovieDetails(id) {\n  return fetchErrorHandling(\n    `${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function getMovieCredits(id) {\n  return fetchErrorHandling(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function getMovieReviews(id, page = 1) {\n  return fetchErrorHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=${page}`\n  );\n}\n"],"names":["Avatar","styled","StyledGoBackLink","Link","movieId","useParams","useState","movie","setMovie","useEffect","themoviedbAPI","then","location","useLocation","backLinkHref","state","from","to","Box","display","src","poster_path","alt","original_title","ml","release_date","slice","vote_average","overview","genres","length","map","g","name","join","borderTop","borderBottom","minHeight","Suspense","fallback","BASE_URL","KEY","fetchErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","getTrending","searchMovies","query","page","getMovieDetails","id","getMovieCredits","getMovieReviews"],"sourceRoot":""}