{"version":3,"file":"static/js/736.4aa725f9.chunk.js","mappings":"kPAEaA,EAAeC,EAAAA,GAAAA,IAAH,yFAMZC,EAAWD,EAAAA,GAAAA,GAAH,6HAQRE,EAAWF,EAAAA,GAAAA,GAAH,8K,kBC0BrB,EApCa,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAKA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA8BN,GAASO,KAAKH,KAC3C,CAACJ,KAGF,8BACGG,IACC,SAACL,EAAD,UACGK,EAAKA,KAAKK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACb,UAACb,EAAD,YACE,SAACH,EAAD,WACE,gBACEiB,IAAG,yCAAoCF,GACvCG,IAAKJ,EACLK,QAAS,SAAAC,GACPA,EAAMC,OAAOJ,IAAMK,EACnBF,EAAMG,QAAU,WAItB,4BACE,wBAAKT,KACL,uBAAIE,SAbOH,Y,oLCjBrBW,EAAW,+BAEXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAkCC,EAAlC,+BAAwC,GAAIC,EAA5C,+BAAqD,GAArD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAmB,GAAD,OAAIF,EAAJ,uCAA2CC,IAG/D,SAASY,IAAuC,IAA1BC,EAAyB,uDAAjB,MAAOC,EAAU,uDAAH,EACjD,OAAOb,EAAmB,GAAD,OACpBF,EADoB,iCACaC,EADb,+DACuEa,EADvE,iBACqFC,IAIzG,SAASC,EAAgB3B,GAC9B,OAAOa,EAAmB,GAAD,OACpBF,EADoB,kBACFX,EADE,oBACYY,EADZ,oBAKpB,SAASgB,EAAgB5B,GAC9B,OAAOa,EAAmB,GAAD,OACpBF,EADoB,kBACFX,EADE,4BACoBY,EADpB,oBAKpB,SAASiB,EAAgB7B,GAAe,IAAX0B,EAAU,uDAAH,EACzC,OAAOb,EAAmB,GAAD,OACpBF,EADoB,kBACFX,EADE,4BACoBY,EADpB,gCAC+Cc,M","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/themoviedb.org-API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ActorsAvatar = styled.div`\n  max-width: 200px;\n  overflow: hidden;\n  border-radius: 3px;\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  justify-content: center;\n`;\n\nexport const CastItem = styled.li`\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background-color: #f8f8f8;\n  border-radius: 3px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as themoviedbAPI from 'services/themoviedb.org-API';\nimport { ActorsAvatar, CastItem, CastList } from './Cast.styled';\nimport defaultIMG from 'images/default/default-avatar-1.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState(null);\n  useEffect(() => {\n    themoviedbAPI.getMovieCredits(movieId).then(setCast);\n  }, [movieId]);\n\n  return (\n    <>\n      {cast && (\n        <CastList>\n          {cast.cast.map(({ id, name, profile_path, character }) => (\n            <CastItem key={id}>\n              <ActorsAvatar>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                  alt={name}\n                  onError={event => {\n                    event.target.src = defaultIMG;\n                    event.onerror = null;\n                  }}\n                />\n              </ActorsAvatar>\n              <div>\n                <h3>{name}</h3>\n                <p>{character}</p>\n              </div>\n            </CastItem>\n          ))}\n        </CastList>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","// const URL:`https://api.themoviedb.org/3/movie/550?api_key=c24a579521956747b362db1dbfab545a`;\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'c24a579521956747b362db1dbfab545a';\n\nasync function fetchErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n}\n\nexport function getTrending() {\n  return fetchErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\n\nexport function searchMovies(query = 'cat', page = 1) {\n  return fetchErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&region=US&include_adult=false&query=${query}&page=${page}`\n  );\n}\n\nexport function getMovieDetails(id) {\n  return fetchErrorHandling(\n    `${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function getMovieCredits(id) {\n  return fetchErrorHandling(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function getMovieReviews(id, page = 1) {\n  return fetchErrorHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=${page}`\n  );\n}\n"],"names":["ActorsAvatar","styled","CastList","CastItem","movieId","useParams","useState","cast","setCast","useEffect","themoviedbAPI","then","map","id","name","profile_path","character","src","alt","onError","event","target","defaultIMG","onerror","BASE_URL","KEY","fetchErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","getTrending","searchMovies","query","page","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}