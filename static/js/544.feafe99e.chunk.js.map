{"version":3,"file":"static/js/544.feafe99e.chunk.js","mappings":"uMAuCA,UAnCa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,MACAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAA4BC,KAAKH,KAChC,IAEH,IAAMI,GAAWC,EAAAA,EAAAA,MAWjB,OACE,4BACE,2CACCN,IACC,wBACGA,EAAOO,QAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OAClB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMR,GAA1C,SACGK,KAFID,a,oLCzBfK,EAAW,+BAEXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAkCC,EAAlC,+BAAwC,GAAIC,EAA5C,+BAAqD,GAArD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAmB,GAAD,OAAIF,EAAJ,uCAA2CC,IAG/D,SAASY,IAAuC,IAA1BC,EAAyB,uDAAjB,MAAOC,EAAU,uDAAH,EACjD,OAAOb,EAAmB,GAAD,OACpBF,EADoB,iCACaC,EADb,+DACuEa,EADvE,iBACqFC,IAIzG,SAASC,EAAgBrB,GAC9B,OAAOO,EAAmB,GAAD,OACpBF,EADoB,kBACFL,EADE,oBACYM,EADZ,oBAKpB,SAASgB,EAAgBtB,GAC9B,OAAOO,EAAmB,GAAD,OACpBF,EADoB,kBACFL,EADE,4BACoBM,EADpB,oBAKpB,SAASiB,EAAgBvB,GAAe,IAAXoB,EAAU,uDAAH,EACzC,OAAOb,EAAmB,GAAD,OACpBF,EADoB,kBACFL,EADE,4BACoBM,EADpB,gCAC+Cc","sources":["pages/Home/Home.jsx","services/themoviedb.org-API.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport * as themoviedbAPI from 'services/themoviedb.org-API';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n  useEffect(() => {\n    themoviedbAPI.getTrending().then(setMovies);\n  }, []);\n\n  const location = useLocation();\n\n  //   (async function trendingMovies() {\n  //     try {\n  //       // const data = await getTrending();\n  //       const data = await searchMovies('bmw');\n  //       console.log(data);\n  //     } catch (error) {}\n  //   })();\n  // console.log(movies);\n\n  return (\n    <div>\n      <h2>Trending today</h2>\n      {movies && (\n        <ul>\n          {movies.results.map(({ id, original_title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {original_title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","// const URL:`https://api.themoviedb.org/3/movie/550?api_key=c24a579521956747b362db1dbfab545a`;\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'c24a579521956747b362db1dbfab545a';\n\nasync function fetchErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n}\n\nexport function getTrending() {\n  return fetchErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\n\nexport function searchMovies(query = 'cat', page = 1) {\n  return fetchErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&region=US&include_adult=false&query=${query}&page=${page}`\n  );\n}\n\nexport function getMovieDetails(id) {\n  return fetchErrorHandling(\n    `${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function getMovieCredits(id) {\n  return fetchErrorHandling(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function getMovieReviews(id, page = 1) {\n  return fetchErrorHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=${page}`\n  );\n}\n"],"names":["useState","movies","setMovies","useEffect","themoviedbAPI","then","location","useLocation","results","map","id","original_title","to","state","from","BASE_URL","KEY","fetchErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","getTrending","searchMovies","query","page","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}